/* var n = 'number' + 3 + 3;
console.log(n)
Ответ: number33 - происходит конкатенация - сначала к number 
добавляется первая тройка, потом - вторая */

/* var n = null + 3;
console.log(n)
Ответ: 3, так null - это 0, а 0 + 3 = 3 */

/* var n = 5 && "qwerty";
console.log(n)
Ответ: qwerty - возвращает qwerty, так как оба операнда истина, 
поэтому && возвращает последний операнд */

/* var n = +'40' + +'2' + "hillel";
console.log(n)
Ответ: 42hillel, так как 40 и 2 преобразуются в числа 40 + 2 = 42 и 
происходит конкатенация со строкой "hillel" */

/* var n = '10' - 5 === 6;
console.log(n)
Ответ: false, так как строка '10' преобразуется в число 10, 10 - 5 = 5, 
сравниваем числа 5 и 6, получается false */

/* var n = true + false;
console.log(n)
Ответ: 1, так как true = 1, false = 0, 1 + 0 = 1 */

/* var n = '4px' - 3;
console.log(n) 
Ответ: NaN, так как пытаемся вычесть из строки число*/

/* var n = '4' - 3;
console.log(n)
Ответ: 1, так как '4' преобразуется в число, а 4 - 3 = 1 */

/* var n = '6' + 3 ** 0;
console.log(n)
Ответ: 61, так как 3 в степени 0 = 1 и конкатенация строки '6' и числа 1 дает в результате 61 */

/* var n = 12 / '6';
console.log(n)
Ответ: 2, так как 12 разделить на число 6 (строка преобразывавается в число 6) = 2*/

/* var n = '10' + (5 === 6);
console.log(n)
Ответ: 10false, так как происходит сравнение 5 и 6, так как знак строгого равенства - получаем false, 
а далее конкатенация строки '10' дает в результате 10false */

/* var n = null == '';
console.log(n)
Ответ: false, так как это сравнение с приведением типов null приведется к объекту, 
а строка останется строкой, поэтому в резльтате получаем false */

/* var n = 3 ** (9 / 3);
console.log(n)
Ответ: 27, так как сначала 9 делим на 3 = 3, потом 3 возводим в степень 3 = 27 */

/* var n = !!'false' == !!'true';
console.log(n)
Ответ: true, так как !!'false' - строка и !!'true' - строка, значения преобразуются в булевые, a true = true*/

/* var n = 0 || '0' && 1;
console.log(n)
Ответ: 1, так как сначала выполняется операция && -'0' преобразуется в булевое значение true, 
далее происходит сравнение true && 1, так как оба операнда истинны, оператор && возвращает последний истинный операнд,
потом выполняется операция || и имеем результат 1, потому что 0 - false, а 1 - true, возвращается первый истинный операнд */ 

/* var n = (+null == false) < 1;
console.log(n) 
Ответ: false, так как +null = 0, 0 == false дает результат true и при сравнении true < 1 получаем результат false*/

/* n = false && true || true;
console.log(n)
Ответ: true, так как false && true вернет false, потому что одно из значений false,
а false || true вернет true, так как одно из значение true */


/* n = false && (false || true);
console.log(n) 
Ответ: false, так как false || true вернет true, потому что одно из значений true,
а false && true вернет false, потому что одно из значений false*/

/* n = (+null == false) < 1 ** 5;
console.log(n) 
Ответ: false, так как так как +null = 0, 0 == false дает результат true,
далее происходит возведение 1 в степень 5, что дает в результате 1,
далее происходит сравнение true < 1 и получаем результат - false*/
